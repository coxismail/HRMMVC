@model HRMMVC.Models.Company

@{
    ViewBag.Title = "Company";
}
<div class="card">
    <div class="card-header">
        Update Company Information
    </div>
    <div class="card-body">


        @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "ajaxform" }))
        {
            @Html.AntiForgeryToken()

            @Html.ValidationSummary(true, "", new { @class = "text-danger ajaxform" })
            @Html.HiddenFor(model => model.Id)
            <div class="d-md-flex justify-md-content-start">
                <div class="col-md-4">
                    <fieldset>
                        <legend>Basic Info</legend>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                            <div class="c-input-group">
                                <span class="icon fa fa-pencil"></span>
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label" })
                            <div class="c-input-group">
                                <span class="icon fa fa-pencil"></span>
                                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                            <div class="c-input-group">
                                <span class="icon fa fa-pencil"></span>
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Website, htmlAttributes: new { @class = "control-label" })
                            <div class="c-input-group">
                                <span class="icon fa fa-pencil"></span>
                                @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Fax, htmlAttributes: new { @class = "control-label" })
                            <div class="c-input-group">
                                <span class="icon fa fa-pencil"></span>
                                @Html.EditorFor(model => model.Fax, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Fax, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </fieldset>
                </div>
                <div class="col-md-4">
                    <fieldset>
                        <legend>Contact Info</legend>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                            <div class="c-input-group">
                                <span class="icon fa fa-pencil"></span>
                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label" })
                            <div class="c-input-group">
                                <span class="icon fa fa-pencil"></span>
                                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label" })
                            <div class="c-input-group">
                                <span class="icon fa fa-pencil"></span>
                                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label" })
                            <div class="c-input-group">
                                <span class="icon fa fa-pencil"></span>
                                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="clearfix">
                            <input type="submit" value="Save" class="btn btn-primary float-right" />
                        </div>
                    </fieldset>

                </div>

            </div>
        }
    </div>
</div>
<div id="javascript" data-function="SetupCompany"></div>