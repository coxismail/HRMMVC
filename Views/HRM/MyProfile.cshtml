@model HRMMVC.Models.ApplicationUser
@using HRMMVC.Models;
@{ 
    var times = new List<SelectListItem>();
    var exitt = TimeZoneInfo.GetSystemTimeZones();
    foreach (var item in exitt)
    {

        var t = new SelectListItem()
        {
            Text = item.DisplayName,
            Value = item.Id,
        };
        if (item.Id == User.Identity.TimeZone().Id)
        {
            t.Selected = true;
        }
        times.Add(t);
    }
}
<div class="card">
    <div class="card-body">


        @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "ajaxform" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            <div class="d-md-flex">
                <div class="col-md-9">
                    <div class="">
                        @Html.LabelFor(model => model.DisplayName, htmlAttributes: new { @class = "control-label" })
                        <div class="c-input-group">
                            <span class="icon fa fa-pencil"></span>
                            @Html.EditorFor(model => model.DisplayName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DisplayName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="">
                        @Html.LabelFor(model => model.TimeZoneId, htmlAttributes: new { @class = "control-label" })
                        <div class="c-input-group">
                            <span class="icon fa fa-pencil"></span>
                            @Html.DropDownListFor(model => model.TimeZoneId, times, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TimeZoneId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                        <div class="c-input-group">
                            <span class="icon fa fa-pencil"></span>
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            @if (Model.EmailConfirmed == true)
                            {
                                <span class="mark-icon fa fa-check text-success"></span>
                            }
                            else
                            {
                                <span class="mark-icon fa fa-times text-danger"></span>
                            }
                        </div>
                    </div>
                    <div class="">
                        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label" })
                        <div class="c-input-group">
                            <span class="icon fa fa-pencil"></span>
                            @Html.EditorFor(model => model.PhoneNumber ,"Phone Number", new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })

                            @if (Model.PhoneNumberConfirmed == true)
                            {
                                <span class="mark-icon fa fa-check text-success"></span>
                            }
                            else
                            {
                                <span class="mark-icon fa fa-times text-danger"></span>
                            }

                        </div>
                    </div>
                </div>

                <div class="col-md-3 d-flex flex-column">
                    <img src="@Url.Content(User.Identity.ProfilePicture())" class="thumnail" width="100%">
                    <span class="upload_alert"></span>
                    <input type="file" id="ImageUpload" name="UploadProfilePicture" file_types="PNG||png||webp||jpeg||jpg" class="form-control file-upload" accept="image/png, image/webp, image/jpeg, image/jpg" />
                </div>
            </div>







            <div class="clearfix">
                <input type="submit" value="Save Profile" class="btn btn-primary float-right" />
            </div>
        }


    </div>
</div>
<div id="javascript" data-function="MyProfile"></div>